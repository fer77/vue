{"version":3,"sources":["notification.js"],"names":["t","N","extend","vm","propsData","message","$mount","is","$el","textContent"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,gCAAL,EAAuCA,KAAK;AACxC;AACA,QAAIC,IAAI,cAAIC,MAAJ,wBAAR;;AAEA;AACA,QAAIC,KAAK,IAAIF,CAAJ,CAAM,EAAEG,WAAW;AACxBC,qBAAS;AADe,SAAb,EAAN,EAELC,MAFK,EAAT,CALwC,CAO1B;;AAEd;AACAN,MAAEO,EAAF,CAAKJ,GAAGK,GAAH,CAAOC,WAAZ,EAAyB,QAAzB;AACH,CAXD;;AAaA,mBAAK,iCAAL,EAAwCT,KAAK;AACzC,QAAIC,IAAI,cAAIC,MAAJ,wBAAR;;AAEA,QAAIC,KAAK,IAAIF,CAAJ,CAAM,EAAEG,WAAW;AACpBC,qBAAS;AADW,SAAb,EAAN,EAEDC,MAFC,EAAT;;AAIAN,MAAEO,EAAF,CAAKJ,GAAGK,GAAH,CAAOC,WAAZ,EAAyB,QAAzB;AACH,CARD","file":"notification.js","sourcesContent":["import Vue from 'vue/dist/vue.js';\nimport test from 'ava';\nimport Notification from '../src/Notification';\n\ntest('that it renders a notification', t => {\n    // extend Vue and its Notification component, that way it can be its own constructor:\n    let N = Vue.extend(Notification);\n\n    // new up that vue instance and explicitly pass any properties that it requires:\n    let vm = new N({ propsData: {\n        message: 'Foobar'\n    }}).$mount(); // $mount and compile.\n\n    // assert that textContent is equal to 'Foobar':\n    t.is(vm.$el.textContent, 'FOOBAR');\n});\n\ntest('tath it capitalizes the message', t => {\n    let N = Vue.extend(Notification);\n\n    let vm = new N({ propsData: {\n            message: 'foobar'\n        }}).$mount();\n        \n    t.is(vm.$el.textContent, 'FOOBAR');\n});"]}