{"version":3,"sources":["notification.js"],"names":["vm","beforeEach","t","N","extend","propsData","message","$mount","is","$el","textContent","notification"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,EAAJ;;AAEA,cAAKC,UAAL,CAAgBC,KAAK;AACjB;AACA,QAAIC,IAAI,cAAIC,MAAJ,wBAAR;;AAEA;AACAJ,SAAK,IAAIG,CAAJ,CAAM,EAAEE,WAAW;AACpBC,qBAAS;AADW,SAAb,EAAN,EAEDC,MAFC,EAAL,CALiB,CAOH;AACjB,CARD;;AAUA,mBAAK,gCAAL,EAAuCL,KAAK;AACxC;AACAA,MAAEM,EAAF,CAAKR,GAAGS,GAAH,CAAOC,WAAZ,EAAyB,QAAzB;AACH,CAHD;;AAKA,mBAAK,mCAAL,EAA0CR,KAAK;AAC3CA,MAAEM,EAAF,CAAKR,GAAGW,YAAR,EAAsB,QAAtB;AACH,CAFD","file":"notification.js","sourcesContent":["import Vue from 'vue/dist/vue.js';\nimport test from 'ava';\nimport Notification from '../src/Notification';\n\nlet vm;\n\ntest.beforeEach(t => {\n    // extend Vue and its Notification component, that way it can be its own constructor:\n    let N = Vue.extend(Notification);\n    \n    // new up that vue instance and explicitly pass any properties that it requires:\n    vm = new N({ propsData: {\n        message: 'Foobar'\n    }}).$mount(); // $mount and compile.\n})\n\ntest('that it renders a notification', t => {\n    // assert that textContent is equal to 'Foobar':\n    t.is(vm.$el.textContent, 'FOOBAR');\n});\n\ntest('that it computes the notification', t => {\n    t.is(vm.notification, 'FOOBAR');\n});"]}